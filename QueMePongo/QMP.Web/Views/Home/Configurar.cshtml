@model Ar.UTN.QMP.Web.Models.UsuarioModel

@{
    ViewBag.Title = "Configurar";
}

<h2>Configurar</h2>


@using (Html.BeginForm("Configurar", "Home"))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SelectedSensibilidad, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(m => m.SelectedSensibilidad, Model.Sensibilidades.Select(c => new SelectListItem { Text = c.Clave, Value = c.Valor }), " ", new { @class = "form-control" })
            </div>
        </div>
        
        @if (Model.EsUsuarioPremium)
        {
            <div class="form-group">
                @Html.LabelFor(model => model.TarjetaCredito, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.TarjetaCredito, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.TarjetaCredito, "", new { @class = "text-danger" })
                </div>
            </div>
        }

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back", "Home", "Home")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
